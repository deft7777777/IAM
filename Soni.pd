#N canvas -8 -8 1538 818 10;
#N canvas 429 38 1317 601 patch 1;
#X msg 143 251 \; pd dsp 0;
#X msg 143 192 \; pd dsp \$1;
#X obj 140 150 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 70;
#X obj 680 120 count 7;
#N canvas -148 112 892 641 sub_1 0;
#X obj 631 442 counter;
#X floatatom 660 470 5 0 0 0 - - -, f 5;
#X obj 647 509 tabread 2020_1;
#X msg 719 396 1;
#X obj 606 346 metro 300;
#X msg 723 425 14;
#X obj 730 215 inlet;
#X obj 622 556 outlet;
#X obj 754 268 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 794 218 inlet;
#X msg 757 334 \; 2020_1 read 2020_1.txt;
#X obj 594 298 *;
#X obj 560 285 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 530 275 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 510 245 notein 1;
#X obj 660 415 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 520 395 notein 3;
#X text 60 160 Play/Pause is controlled by buttonA from channel 1 Only
when 2 toggles are both on can the metro start to work. This is because
the design for Play/Pause works for 6 data simultaneously \, in order
to make sure only one data is working at a time \, toggle on the right
responses for activating the data \, and the Play/Pause responses for
turning on or off the metro.;
#X text 60 390 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 710 195 Route 1 for turn on the metro;
#X text 830 235 Route 2 for turn of the metro;
#X text 810 390 Data from file are read in to array;
#X text 760 510 Output form counter can locate and take the data in
array then output it.;
#X obj 660 260 * 7.09;
#X floatatom 610 260 5 0 0 0 - - -, f 5;
#X obj 610 190 ctlin 0 4;
#X text 500 110 Control0 sends the value of X acceleration as midi
value from 1 to 127 \, considering the proper input value for metro
\, the input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X obj 540 470 pack;
#X obj 540 510 s S202001;
#X text 60 500 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X obj 670 550 s Score202001;
#X text 770 550 The current score is sent to main UI as number;
#X obj 450 250 r pause;
#X obj 650 390 r reset;
#X obj 660 220 r speed01;
#X connect 0 0 2 0;
#X connect 0 0 27 0;
#X connect 0 0 1 0;
#X connect 2 0 7 0;
#X connect 2 0 30 0;
#X connect 3 0 0 2;
#X connect 4 0 0 0;
#X connect 4 0 27 1;
#X connect 5 0 0 4;
#X connect 6 0 8 0;
#X connect 8 0 11 1;
#X connect 8 0 3 0;
#X connect 8 0 5 0;
#X connect 9 0 8 0;
#X connect 11 0 4 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 15 0 0 2;
#X connect 16 0 15 0;
#X connect 23 0 4 1;
#X connect 25 0 23 0;
#X connect 25 0 24 0;
#X connect 27 0 28 0;
#X connect 32 0 13 0;
#X connect 33 0 15 0;
#X connect 34 0 23 0;
#X restore 460 300 pd sub_1;
#N canvas 116 92 946 688 sub_2 0;
#X obj 733 514 counter;
#X floatatom 757 546 5 0 0 0 - - -, f 5;
#X msg 821 468 1;
#X obj 708 418 metro 300;
#X obj 832 287 inlet;
#X obj 724 628 outlet;
#X obj 856 340 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 1 1;
#X obj 896 290 inlet;
#X obj 696 370 *;
#X obj 662 357 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 632 347 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 612 317 notein 1;
#X obj 762 487 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 622 467 notein 3;
#X text 162 232 Play/Pause is controlled by buttonA from channel 1
Only when 2 toggles are both on can the metro start to work. This is
because the design for Play/Pause works for 6 data simultaneously \,
in order to make sure only one data is working at a time \, toggle
on the right responses for activating the data \, and the Play/Pause
responses for turning on or off the metro.;
#X text 162 462 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 812 267 Route 1 for turn on the metro;
#X text 932 307 Route 2 for turn of the metro;
#X text 912 462 Data from file are read in to array;
#X text 862 582 Output form counter can locate and take the data in
array then output it.;
#X obj 762 332 * 7.09;
#X floatatom 712 332 5 0 0 0 - - -, f 5;
#X obj 712 262 ctlin 0 4;
#X text 602 182 Control0 sends the value of X acceleration as midi
value from 1 to 127 \, considering the proper input value for metro
\, the input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X msg 825 497 29;
#X obj 749 581 tabread 2020_2;
#X msg 859 406 \; 2020_2 read 2020_2.txt;
#X obj 650 530 pack;
#X obj 650 580 s S202002;
#X text 160 560 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X text 880 620 The current score is sent to main UI as number;
#X obj 780 620 s Score202002;
#X obj 560 330 r pause;
#X obj 750 460 r reset;
#X obj 760 290 r speed02;
#X connect 0 0 1 0;
#X connect 0 0 25 0;
#X connect 0 0 27 0;
#X connect 2 0 0 2;
#X connect 3 0 0 0;
#X connect 3 0 27 1;
#X connect 4 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 0 2 0;
#X connect 8 0 24 0;
#X connect 8 0 26 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 0 2;
#X connect 13 0 12 0;
#X connect 20 0 3 1;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 0 4;
#X connect 25 0 5 0;
#X connect 25 0 31 0;
#X connect 27 0 28 0;
#X connect 32 0 10 0;
#X connect 33 0 12 0;
#X connect 34 0 20 0;
#X restore 540 300 pd sub_2;
#X obj 551 199 route 0 1 2 3 4 5;
#X obj 790 200 route 1 2 3 4 5 6;
#N canvas 197 36 544 418 keynote 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array keynote 23 float 3 black black;
#A 0 98 110 123 131 147 165 175 196 220 247 262 294 330 349 392 440
494 523 587 659 698 784 880;
#X coords 0 900 23 0 200 140 1;
#X restore 314 12 graph;
#X msg 102 90 \; keynote read key.txt;
#X obj 58 54 inlet;
#X obj 57 164 tabread keynote;
#X floatatom 95 209 5 0 0 0 - - -, f 5;
#X obj 56 243 outlet;
#X floatatom 127 58 5 0 0 0 - - -, f 5;
#X obj 60 110 + 8;
#X text 150 200 Keynote.txt includes 23 different frequencies data
from the keyboard (Because the scores are from minimum of -8 to maximum
of +14). While the input of tabread works as pointer \, all the data
will plus 8 before being sent into function.;
#X connect 1 0 3 0;
#X connect 2 0 6 0;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 3 0 5 0;
#X connect 7 0 3 0;
#X restore 690 510 pd keynote;
#N canvas 0 430 1449 728 sub_3 0;
#X obj 793 494 counter;
#X floatatom 817 526 5 0 0 0 - - -, f 5;
#X msg 881 448 1;
#X obj 768 398 metro 300;
#X obj 892 267 inlet;
#X obj 784 608 outlet;
#X obj 916 320 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 956 270 inlet;
#X obj 756 350 *;
#X obj 722 337 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 692 327 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 672 297 notein 1;
#X obj 822 467 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 682 447 notein 3;
#X text 222 212 Play/Pause is controlled by buttonA from channel 1
Only when 2 toggles are both on can the metro start to work. This is
because the design for Play/Pause works for 6 data simultaneously \,
in order to make sure only one data is working at a time \, toggle
on the right responses for activating the data \, and the Play/Pause
responses for turning on or off the metro.;
#X text 222 442 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 872 247 Route 1 for turn on the metro;
#X text 992 287 Route 2 for turn of the metro;
#X text 972 442 Data from file are read in to array;
#X text 922 562 Output form counter can locate and take the data in
array then output it.;
#X obj 822 312 * 7.09;
#X floatatom 772 312 5 0 0 0 - - -, f 5;
#X obj 772 242 ctlin 0 4;
#X text 662 162 Control0 sends the value of X acceleration as midi
value from 1 to 127 \, considering the proper input value for metro
\, the input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X msg 885 477 12;
#X msg 919 386 \; 2020_3 read 2020_3.txt;
#X obj 809 561 tabread 2020_3;
#X text 220 550 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X obj 690 520 pack;
#X obj 690 560 s S202003;
#X text 940 600 The current score is sent to main UI as number;
#X obj 840 600 s Score202003;
#X obj 600 300 r pause;
#X obj 810 440 r reset;
#X obj 820 270 r speed03;
#X connect 0 0 1 0;
#X connect 0 0 26 0;
#X connect 0 0 28 0;
#X connect 2 0 0 2;
#X connect 3 0 0 0;
#X connect 3 0 28 1;
#X connect 4 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 0 2 0;
#X connect 8 0 24 0;
#X connect 8 0 25 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 0 2;
#X connect 13 0 12 0;
#X connect 20 0 3 1;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 0 4;
#X connect 26 0 5 0;
#X connect 26 0 31 0;
#X connect 28 0 29 0;
#X connect 32 0 10 0;
#X connect 33 0 12 0;
#X connect 34 0 20 0;
#X restore 620 300 pd sub_3;
#X obj 150 50 notein 6;
#X obj 140 120 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X text 110 0 Midi channel 6 is for receiving message from Press(A+B)
\, which is used for the On/Off;
#X obj 680 50 notein 2;
#X text 840 40 Midi channel 2 is for receiving message from Button
B \, which is used for selecting the seasons. This is achieved by 2
connecting 2 routes. The left one counts from 0 and the right one counts
from 1 In this way \, route left can turn on one data transform function
at a time \, when turning to the second data \, route right will turn
off the first data transform;
#X text 700 350 There are 6 different data transform functions stand
for 6 different season from 2020 to 2021 They all have the same structures
except the counters work with different parameters (because they have
a different number of games each season).;
#N canvas 352 203 1079 501 output 0;
#N canvas 248 61 657 700 guitar 0;
#X floatatom 257 190 5 0 0 0 - - -, f 5;
#X obj 218 224 del;
#X msg 185 250 1;
#X msg 218 250 0;
#X obj 97 254 noise~;
#X obj 98 323 *~;
#X obj 278 281 vd~ buffer 100;
#X obj 360 660 dac~;
#X obj 97 553 delwrite~ buffer 1000;
#X obj 365 313 z~ 1;
#X obj 279 377 +~;
#X floatatom 257 122 5 0 0 0 - - -, f 5;
#X text 316 124 Frequency (Hz.);
#X text 421 310 Delay by 1 Sample;
#X text 423 355 calculates average;
#X obj 257 159 expr 1000 / $f1;
#X text 308 190 duration of one period (ms);
#X obj 173 78 inlet;
#X obj 210 520 *~;
#X obj 366 340 *~ 0.5;
#X obj 240 490 inlet;
#X obj 170 490 *~ 0.1;
#X obj 278 324 *~ 0.5;
#X obj 360 580 *~;
#X obj 420 520 ctlin 0 5;
#X obj 400 550 /~ 127;
#X obj 360 620 *~;
#X obj 540 570 notein 1;
#X obj 540 600 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 540 630 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 280 420 *~ 0.995;
#X text 340 410 Damping factor is usually between 0 and 1 Due to the
limitation of controller \, this is tested in advance and is set as
0.995;
#X text 60 40 This inlet is the frequency content of output \, it can
also be used as the bang for parameter presets for karplus-strong;
#X text 280 470 This inlet is for selecting output \, only the frequency
content with a bang from this inlet can the patch works;
#X text 590 600 Notein 1 here is to make sure the the Play/Pause button
can work normally., f 38;
#X text 490 510 Controller uses midi channel 5 to send message \, while
the midi message is from 1 to 127 \, by divided by 127 can make the
input in range of 0 to 1 (for volume control).;
#X obj 490 580 r pause;
#X obj 360 520 r volume;
#X connect 0 0 1 1;
#X connect 0 0 6 0;
#X connect 1 0 3 0;
#X connect 2 0 5 1;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 6 0 22 0;
#X connect 9 0 19 0;
#X connect 10 0 30 0;
#X connect 11 0 15 0;
#X connect 15 0 0 0;
#X connect 17 0 11 0;
#X connect 17 0 1 0;
#X connect 17 0 2 0;
#X connect 18 0 23 0;
#X connect 19 0 10 1;
#X connect 20 0 18 1;
#X connect 21 0 18 0;
#X connect 22 0 10 0;
#X connect 23 0 26 0;
#X connect 24 0 25 0;
#X connect 25 0 23 1;
#X connect 26 0 7 0;
#X connect 26 0 7 1;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 26 1;
#X connect 30 0 8 0;
#X connect 30 0 21 0;
#X connect 36 0 28 0;
#X connect 37 0 25 0;
#X restore 600 300 pd guitar;
#X obj 450 120 osc~;
#X obj 450 320 dac~;
#X obj 730 90 route 0 1;
#X obj 820 20 notein 7;
#X obj 450 170 *~;
#X obj 700 150 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 1 1;
#X obj 730 130 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 810 160 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 770 180 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 1 1;
#X obj 890 100 route 1 2;
#X obj 820 70 count 2;
#X obj 450 210 *~;
#X obj 500 80 ctlin 0 5;
#X obj 500 110 /~ 127;
#X obj 450 80 inlet;
#X obj 450 270 *~;
#X obj 500 200 notein 1;
#X obj 500 250 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 500 230 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X text 400 380 There are two different output methods \, the first
is the oscillator and the second is synthesized instrument.;
#X text 800 210 This sector is used for selecting output method. 3
differnet output method can be selected \, only oscillator \, only
guitar or both work together. This can be done by 2 routers with different
counts.;
#X text 200 200 Notein 1 here is to make sure the the Play/Pause button
can work normally., f 38;
#X text 360 20 Controller uses midi channel 5 to send message \, while
the midi message is from 1 to 127 \, by divided by 127 can make the
input in range of 0 to 1 (for volume control).;
#X obj 890 40 r ins_sel;
#X obj 580 200 r pause;
#X obj 570 80 r volume;
#X obj 500 140 *~ 0.1;
#X connect 1 0 5 0;
#X connect 3 0 7 0;
#X connect 3 1 8 0;
#X connect 4 0 11 0;
#X connect 5 0 12 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 0 1;
#X connect 10 0 7 0;
#X connect 10 1 8 0;
#X connect 11 0 3 0;
#X connect 11 0 10 0;
#X connect 12 0 16 0;
#X connect 13 0 14 0;
#X connect 14 0 27 0;
#X connect 15 0 1 0;
#X connect 15 0 0 0;
#X connect 16 0 2 0;
#X connect 16 0 2 1;
#X connect 17 0 19 0;
#X connect 18 0 16 1;
#X connect 19 0 18 0;
#X connect 24 0 11 0;
#X connect 25 0 19 0;
#X connect 26 0 14 0;
#X connect 27 0 12 1;
#X restore 690 580 pd output;
#N canvas 42 410 1140 703 sub_4 0;
#X obj 641 432 counter;
#X floatatom 665 464 5 0 0 0 - - -, f 5;
#X msg 729 386 1;
#X obj 616 336 metro 300;
#X obj 740 205 inlet;
#X obj 632 546 outlet;
#X obj 764 258 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 804 208 inlet;
#X obj 604 288 *;
#X obj 570 275 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 540 265 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 520 235 notein 1;
#X obj 670 405 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 530 385 notein 3;
#X text 70 150 Play/Pause is controlled by buttonA from channel 1 Only
when 2 toggles are both on can the metro start to work. This is because
the design for Play/Pause works for 6 data simultaneously \, in order
to make sure only one data is working at a time \, toggle on the right
responses for activating the data \, and the Play/Pause responses for
turning on or off the metro.;
#X text 70 380 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 720 185 Route 1 for turn on the metro;
#X text 840 225 Route 2 for turn of the metro;
#X text 820 380 Data from file are read in to array;
#X text 770 500 Output form counter can locate and take the data in
array then output it.;
#X obj 670 250 * 7.09;
#X floatatom 620 250 5 0 0 0 - - -, f 5;
#X obj 620 180 ctlin 0 4;
#X text 510 100 Control0 sends the value of X acceleration as midi
value from 1 to 127 \, considering the proper input value for metro
\, the input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X msg 733 415 24;
#X msg 767 324 \; 2020_4 read 2020_4.txt;
#X obj 657 499 tabread 2020_4;
#X obj 550 460 pack;
#X text 70 490 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X obj 550 500 s S202004;
#X text 800 540 The current score is sent to main UI as number;
#X obj 700 540 s Score202004;
#X obj 470 240 r pause;
#X obj 660 370 r reset;
#X obj 670 210 r speed04;
#X connect 0 0 1 0;
#X connect 0 0 26 0;
#X connect 0 0 27 0;
#X connect 2 0 0 2;
#X connect 3 0 0 0;
#X connect 3 0 27 1;
#X connect 4 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 0 2 0;
#X connect 8 0 24 0;
#X connect 8 0 25 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 0 2;
#X connect 13 0 12 0;
#X connect 20 0 3 1;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 0 4;
#X connect 26 0 5 0;
#X connect 26 0 31 0;
#X connect 27 0 29 0;
#X connect 32 0 10 0;
#X connect 33 0 12 0;
#X connect 34 0 20 0;
#X restore 710 300 pd sub_4;
#N canvas 0 123 1191 652 sub_5 0;
#X obj 743 484 counter;
#X floatatom 767 516 5 0 0 0 - - -, f 5;
#X msg 831 438 1;
#X obj 718 388 metro 300;
#X obj 842 257 inlet;
#X obj 734 598 outlet;
#X obj 866 310 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 906 260 inlet;
#X obj 706 340 *;
#X obj 672 327 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 642 317 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 622 287 notein 1;
#X obj 772 457 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 632 437 notein 3;
#X text 172 202 Play/Pause is controlled by buttonA from channel 1
Only when 2 toggles are both on can the metro start to work. This is
because the design for Play/Pause works for 6 data simultaneously \,
in order to make sure only one data is working at a time \, toggle
on the right responses for activating the data \, and the Play/Pause
responses for turning on or off the metro.;
#X text 172 432 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 822 237 Route 1 for turn on the metro;
#X text 942 277 Route 2 for turn of the metro;
#X text 922 432 Data from file are read in to array;
#X text 872 552 Output form counter can locate and take the data in
array then output it.;
#X obj 772 302 * 7.09;
#X floatatom 722 302 5 0 0 0 - - -, f 5;
#X obj 722 232 ctlin 0 4;
#X text 612 152 Control0 sends the value of X acceleration as midi
value from 1 to 127 \, considering the proper input value for metro
\, the input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X msg 835 467 16;
#X msg 869 376 \; 2021_1 read 2021_1.txt;
#X obj 759 551 tabread 2021_1;
#X obj 650 510 pack;
#X text 170 540 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X obj 650 550 s S202101;
#X text 890 590 The current score is sent to main UI as number;
#X obj 790 590 s Score202101;
#X obj 560 300 r pause;
#X obj 750 430 r reset;
#X obj 770 260 r speed05;
#X connect 0 0 1 0;
#X connect 0 0 26 0;
#X connect 0 0 27 0;
#X connect 2 0 0 2;
#X connect 3 0 0 0;
#X connect 3 0 27 1;
#X connect 4 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 0 2 0;
#X connect 8 0 24 0;
#X connect 8 0 25 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 0 2;
#X connect 13 0 12 0;
#X connect 20 0 3 1;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 0 4;
#X connect 26 0 5 0;
#X connect 26 0 31 0;
#X connect 27 0 29 0;
#X connect 32 0 10 0;
#X connect 33 0 12 0;
#X connect 34 0 20 0;
#X restore 810 300 pd sub_5;
#N canvas 0 402 1210 677 sub_6 0;
#X obj 671 413 counter;
#X floatatom 695 445 5 0 0 0 - - -, f 5;
#X msg 759 367 1;
#X obj 646 317 metro 300;
#X obj 770 186 inlet;
#X obj 662 527 outlet;
#X obj 794 239 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 834 189 inlet;
#X obj 634 269 *;
#X obj 600 256 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 60;
#X obj 570 246 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 550 216 notein 1;
#X obj 700 386 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 560 366 notein 3;
#X text 100 131 Play/Pause is controlled by buttonA from channel 1
Only when 2 toggles are both on can the metro start to work. This is
because the design for Play/Pause works for 6 data simultaneously \,
in order to make sure only one data is working at a time \, toggle
on the right responses for activating the data \, and the Play/Pause
responses for turning on or off the metro.;
#X text 100 361 Considering how counter works \, channel 3 is controlled
by ButtonC and connected to the third input of the counter. This is
for the function of reset.;
#X text 750 166 Route 1 for turn on the metro;
#X text 870 206 Route 2 for turn of the metro;
#X text 850 361 Data from file are read in to array;
#X text 800 481 Output form counter can locate and take the data in
array then output it.;
#X obj 700 231 * 7.09;
#X floatatom 650 231 5 0 0 0 - - -, f 5;
#X obj 650 161 ctlin 0 4;
#X text 540 81 Control0 sends the value of X acceleration as midi value
from 1 to 127 \, considering the proper input value for metro \, the
input is set from 1 to 900 So after modified the input by mutliplied
with 7.09 \, a suitable tempo is sent to metro;
#X obj 687 480 tabread 2021_2;
#X msg 797 305 \; 2021_2 read 2021_2.txt;
#X msg 763 396 11;
#X obj 580 430 pack;
#X text 100 440 Function Pack will bring all the data from array together
\, then use function send to send all data to Slider on main UI. Pack
also receives the speed from metro so that the slider can act simultaneously
as the sound.;
#X obj 580 470 s S202102;
#X text 820 520 The current score is sent to main UI as number;
#X obj 720 520 s Score202102;
#X obj 500 230 r pause;
#X obj 670 360 r reset;
#X obj 700 190 r speed06;
#X connect 0 0 1 0;
#X connect 0 0 24 0;
#X connect 0 0 27 0;
#X connect 2 0 0 2;
#X connect 3 0 0 0;
#X connect 3 0 27 1;
#X connect 4 0 6 0;
#X connect 6 0 8 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 8 0 2 0;
#X connect 8 0 26 0;
#X connect 8 0 25 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 12 0 0 2;
#X connect 13 0 12 0;
#X connect 20 0 3 1;
#X connect 22 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 5 0;
#X connect 24 0 31 0;
#X connect 26 0 0 4;
#X connect 27 0 29 0;
#X connect 32 0 10 0;
#X connect 33 0 12 0;
#X connect 34 0 20 0;
#X restore 910 300 pd sub_6;
#X obj 680 90 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X floatatom 680 160 5 0 0 0 - - -, f 5;
#X obj 460 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 510 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 540 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 590 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 620 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 670 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 710 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 760 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 810 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 860 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 910 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 960 260 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 170 150 r dsp;
#X obj 730 90 r sea_sel;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 21 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 22 0;
#X connect 6 1 24 0;
#X connect 6 2 26 0;
#X connect 6 3 28 0;
#X connect 6 4 30 0;
#X connect 6 5 32 0;
#X connect 7 0 23 0;
#X connect 7 1 25 0;
#X connect 7 2 27 0;
#X connect 7 3 29 0;
#X connect 7 4 31 0;
#X connect 7 5 33 0;
#X connect 8 0 16 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 2 0;
#X connect 13 0 20 0;
#X connect 17 0 8 0;
#X connect 18 0 8 0;
#X connect 19 0 8 0;
#X connect 20 0 3 0;
#X connect 21 0 6 0;
#X connect 21 0 7 0;
#X connect 22 0 4 0;
#X connect 23 0 4 1;
#X connect 24 0 5 0;
#X connect 25 0 5 1;
#X connect 26 0 9 0;
#X connect 27 0 9 1;
#X connect 28 0 17 0;
#X connect 29 0 17 1;
#X connect 30 0 18 0;
#X connect 31 0 18 1;
#X connect 32 0 19 0;
#X connect 33 0 19 1;
#X connect 34 0 1 0;
#X connect 35 0 3 0;
#X restore 280 620 pd patch;
#X obj 460 149 hsl 200 139 0 15 0 0 empty S202001 empty -2 -8 0 10
#ff0000 #000000 #000000 2653 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2020_1 15 float 3 black black;
#A 0 0 1 2 4 6 7 9 10 12 14 13 10 11 10 8;
#X coords 0 15 15 -15 205 139 1;
#X restore 460 150 graph;
#X obj 663 350 hsl 200 139 0 17 0 0 empty S202101 empty -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X obj 666 149 hsl 200 139 0 30 0 0 empty S202002 empty -2 -8 0 10
#fcfcfc #000000 #000000 5307 1;
#X obj 870 149 hsl 200 139 0 13 0 0 empty S202003 empty -2 -8 0 10
#ff0000 #000000 #000000 0 1;
#X obj 870 349 hsl 200 139 0 12 0 0 empty S202102 empty -2 -8 0 10
#ff0000 #000000 #000000 0 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2020_2 30 float 3 black black;
#A 0 0 2 0 2 0 1 3 2 4 3 1 2 3 4 1 0 1 3 1 3 4 3 1 2 1 3 1 -1 -3 -2
;
#X coords 0 15 30 -15 200 140 1;
#X restore 670 149 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2020_3 13 float 3 black #ffffff;
#A 0 0 2 4 5 6 5 6 8 7 5 4 3 1;
#X coords 0 15 13 -15 204 140 1;
#X restore 870 149 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2021_2 12 float 3 black #ffffff;
#A 0 0 1 -1 1 2 3 4 3 4 6 7 6;
#X coords 0 15 12 -15 204 140 1;
#X restore 870 350 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2021_1 17 float 3 black black;
#A 0 0 1 0 -2 0 -2 -4 -2 -4 -6 -8 -7 -5 -3 -4 -2 -4;
#X coords 0 15 17 -15 206 140 1;
#X restore 664 350 graph;
#X obj 456 350 hsl 200 139 0 25 0 0 empty S202004 empty -2 -8 0 10
#ff0000 #000000 #000000 0 1;
#N canvas 0 22 450 300 (subpatch) 0;
#X array 2020_4 25 float 3 black black;
#A 0 0 -2 -4 -2 -3 -2 -3 -5 -6 -8 -6 -7 -6 -5 -3 -4 -3 -2 0 -1 -3 -2
-3 -5 -6;
#X coords 0 15 25 -15 204 140 1;
#X restore 456 350 graph;
#X floatatom 566 330 5 0 0 0 - Score202004 -, f 5;
#X floatatom 776 330 5 0 0 0 - Score202101 -, f 5;
#X floatatom 976 330 5 0 0 0 - Score202102 -, f 5;
#X floatatom 980 130 5 0 0 0 - Score202003 -, f 5;
#X floatatom 780 130 5 0 0 0 - Score202002 -, f 5;
#X floatatom 570 130 5 0 0 0 - Score202001 -, f 5;
#X text 460 130 Current Score:;
#X text 670 130 Current Score:;
#X text 870 130 Current Score:;
#X text 456 330 Current Score:;
#X text 666 330 Current Score:;
#X text 866 330 Current Score:;
#X text 720 70 Let's Go G2!, f 13;
#X obj 480 540 tgl 35 0 dsp empty empty 17 7 0 10 #fcfcfc #000000 #000000
0 1;
#X obj 560 540 bng 34 250 50 0 sea_sel empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 650 540 bng 33 250 50 0 ins_sel empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 750 540 bng 32 250 50 0 pause empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 840 540 bng 31 250 50 0 reset empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X text 530 580 season select;
#X text 630 580 output select;
#X text 740 580 play/pause;
#X text 840 580 reset;
#X text 460 580 dsp switch;
#X obj 924 550 hsl 128 15 0 127 0 0 volume empty empty -2 -8 0 10 #fcfcfc
#000000 #000000 2100 1;
#X text 964 580 volume;
#X obj 500 300 hsl 128 15 127 0 0 0 speed01 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 10000 1;
#X obj 710 300 hsl 128 15 127 0 0 0 speed02 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 8300 1;
#X obj 910 300 hsl 128 15 127 0 0 0 speed03 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X obj 500 510 hsl 128 15 127 0 0 0 speed04 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X obj 710 510 hsl 128 15 127 0 0 0 speed05 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X obj 920 510 hsl 128 15 127 0 0 0 speed06 empty empty -2 -8 0 10
#fcfcfc #000000 #000000 0 1;
#X text 380 300 Speed control;
#X text 380 510 Speed control;
#X text 50 70 This is the sonification system \, Let's Go G2. You can
play and see how G2.CSGO acted from 2020.01.01 to 2021.04.30 by using
this system. The sound with higher frequency means higher scores. Now
let's enjoy this journey together!;
#X text 20 270 If it is the first time to use \, please set up in order:
;
#X text 40 300 1.Turn on dsp switch;
#X text 40 330 2.Use season select to select a season;
#X text 40 360 3.Use output select to select a output;
#X text 40 390 4.Don't forget to set volume before play!;
#X text 490 620 1;
#X text 570 620 2;
#X text 660 620 3;
#X text 980 620 4;
#X text 760 620 5;
#X text 570 700 VERY IMPORTANT: Please click play/pause before any
parameters setting except slider(volume and speed) control~;
